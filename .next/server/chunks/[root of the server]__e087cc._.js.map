{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file://D%3A/proiect-form/form-tma/lib/googleSheets.ts"],"sourcesContent":["import { google } from 'googleapis';\r\n\r\nconst auth = new google.auth.GoogleAuth({\r\n  credentials: {\r\n    client_email: process.env.GOOGLE_SHEETS_CLIENT_EMAIL,\r\n    private_key: process.env.GOOGLE_SHEETS_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\r\n  },\r\n  scopes: ['https://www.googleapis.com/auth/spreadsheets'],\r\n});\r\n\r\nconst sheets = google.sheets({ version: 'v4', auth });\r\n\r\nexport async function appendToSheet(values: string[][]) {\r\n  try {\r\n    const response = await sheets.spreadsheets.values.append({\r\n      spreadsheetId: process.env.GOOGLE_SHEETS_SHEET_ID,\r\n      range: 'Sheet1!A:AN', // Ajustați în funcție de numărul de coloane\r\n      valueInputOption: 'USER_ENTERED',\r\n      requestBody: {\r\n        values,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error appending to sheet:', error);\r\n    throw error;\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IACtC,aAAa;QACX,cAAc,QAAQ,GAAG,CAAC,0BAA0B;QACpD,aAAa,QAAQ,GAAG,CAAC,yBAAyB,EAAE,QAAQ,QAAQ;IACtE;IACA,QAAQ;QAAC;KAA+C;AAC1D;AAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;IAAE,SAAS;IAAM;AAAK;AAE5C,eAAe,cAAc,MAAkB;IACpD,IAAI;QACF,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;YACvD,eAAe,QAAQ,GAAG,CAAC,sBAAsB;YACjD,OAAO;YACP,kBAAkB;YAClB,aAAa;gBACX;YACF;QACF;QACA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file://D%3A/proiect-form/form-tma/app/api/submit/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { appendToSheet } from '@/lib/googleSheets';\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const data = await req.json();\r\n    \r\n    // Formatăm datele pentru Google Sheets\r\n    const values = [[\r\n      data.numeParinte,               // Parent First Names\r\n      data.prenumeParinte,            // Parent Last Name\r\n      data.email,                     // Parent Email\r\n      '',                             // Additional Email\r\n      data.telefon,                   // Mobile Phone\r\n      '',                             // Home Phone\r\n      '',                             // Work Phone\r\n      data.adresa,                    // Address\r\n      '',                             // Address 2\r\n      data.localitate,                // City\r\n      data.judet,                     // State\r\n      '',                             // Zip Code\r\n      'Romania',                      // Country\r\n      'Active',                       // Parent Status\r\n      '',                             // Notes\r\n      'Yes',                          // Event Reminders\r\n      '',                             // Event Notes\r\n      'Yes',                          // Emails\r\n      'Yes',                          // SMS Reminders\r\n      data.numeCopil,                 // Student First Name\r\n      data.prenumeCopil,              // Student Last Name\r\n      '',                             // Student Email\r\n      '',                             // Student Mobile Phone\r\n      '',                             // Student Home Phone\r\n      data.dataNasterii,             // Birth Date\r\n      new Date().toISOString(),       // Start Date\r\n      '',                             // School\r\n      '',                             // Grade\r\n      data.cursuri.join(', '),       // Subjects\r\n      '',                             // Student Notes\r\n      'Active',                       // Student Status\r\n      'Standard',                     // Billing Method\r\n      '',                             // Student Hourly Cost\r\n      '',                             // Cost Premium Name\r\n      '',                             // Discount Rate\r\n      'Yes',                          // Student Event Reminders\r\n      '',                             // Student Event Notes\r\n      'Yes',                          // Student Emails\r\n      'Yes',                          // Student SMS Reminders\r\n    ]];\r\n\r\n    await appendToSheet(values);\r\n\r\n    return NextResponse.json({ success: true });\r\n  } catch (error) {\r\n    console.error('Error in submit route:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to submit form' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,uCAAuC;QACvC,MAAM,SAAS;YAAC;gBACd,KAAK,WAAW;gBAChB,KAAK,cAAc;gBACnB,KAAK,KAAK;gBACV;gBACA,KAAK,OAAO;gBACZ;gBACA;gBACA,KAAK,MAAM;gBACX;gBACA,KAAK,UAAU;gBACf,KAAK,KAAK;gBACV;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,KAAK,SAAS;gBACd,KAAK,YAAY;gBACjB;gBACA;gBACA;gBACA,KAAK,YAAY;gBACjB,IAAI,OAAO,WAAW;gBACtB;gBACA;gBACA,KAAK,OAAO,CAAC,IAAI,CAAC;gBAClB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;SAAC;QAEF,MAAM,CAAA,GAAA,qHAAA,CAAA,gBAAa,AAAD,EAAE;QAEpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}